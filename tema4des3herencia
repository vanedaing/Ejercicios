# Clase base Libro
class Libro:
    def __init__(self, titulo, autor):
        self.titulo = titulo
        self.autor = autor

    def informacion(self):
        return f"Título: {self.titulo}, Autor: {self.autor}"

# Subclase LibroDigital que hereda de Libro
class LibroDigital(Libro):
    def __init__(self, titulo, autor, formato, tamaño_archivo):
        # Inicializa los atributos heredados de Libro
        super().__init__(titulo, autor)
        # Nuevos atributos específicos de LibroDigital
        self.formato = formato
        self.tamaño_archivo = tamaño_archivo

    def informacion(self):
        # Llama al método de la clase base para mostrar información común
        base_info = super().informacion()
        return (f"{base_info}, Formato: {self.formato}, Tamaño de archivo: {self.tamaño_archivo} MB")

# Subclase EBook que sobrescribe el método informacion
class EBook(LibroDigital):
    def __init__(self, titulo, autor, formato, tamaño_archivo, enlace_descarga):
        # Inicializa los atributos heredados de LibroDigital
        super().__init__(titulo, autor, formato, tamaño_archivo)
        self.enlace_descarga = enlace_descarga

    def informacion(self):
        # Llama al método de la clase base para obtener la información del libro digital
        base_info = super().informacion()
        return (f"{base_info}, Enlace de descarga: {self.enlace_descarga}")

# Ejemplo de uso
libro_digital = LibroDigital("El Gran Gatsby", "F. Scott Fitzgerald", "PDF", 1.5)
ebook = EBook("1984", "George Orwell", "EPUB", 2.0, "https://www.ebooks.com/1984")

# Mostrar la información de ambos libros
print(libro_digital.informacion())
print(ebook.informacion())
